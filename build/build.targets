<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <Import Project="$(BuildDir)\nuget.props" />
  <Import Project="task\AssemblyInfo.task" />
  <Import Project="task\Nuget.task" />
  <Import Project="task\Zip.task" />
  
  <PropertyGroup>
    <Configuration>Release</Configuration>
    <Platform>Any CPU</Platform>
  </PropertyGroup>

  <!-- Directories -->
  <PropertyGroup>
		<PackageDir>$(BuildDir)\package</PackageDir>
  </PropertyGroup>
  
  <!-- Tools -->
	<PropertyGroup>
		<NUnitConsole>$(Nuget_NUnit_ConsoleRunner_ToolsDirectory)\nunit3-console.exe</NUnitConsole>
		<Nuget>NuGet.exe</Nuget>
		<Git>git</Git>
    <GithubRelease>github-release.exe</GithubRelease>
    <GithubReleaseEnvironmentVariables>GITHUB_TOKEN=$(GITHUB_TOKEN);GITHUB_USER=$(GITHUB_USER);GITHUB_REPO=$(GITHUB_REPO)</GithubReleaseEnvironmentVariables>
  </PropertyGroup>

  <Import Project="$(Nuget_GitVersionTask_Directory)\Build\GitVersionTask.targets" />
  
  <Target Name="GetVersion">
		<GetVersion SolutionDirectory="$(SourceDir)">
		  <Output TaskParameter="Major" PropertyName="GfvMajor" />
		  <Output TaskParameter="Minor" PropertyName="GfvMinor" />
		  <Output TaskParameter="Patch" PropertyName="GfvPatch" />
		  <Output TaskParameter="BuildMetaData" PropertyName="GfvBuildMetaData" />
		  <Output TaskParameter="FullBuildMetaData" PropertyName="GfvFullBuildMetaData" />
		  <Output TaskParameter="BranchName" PropertyName="GfvBranchName" />
		  <Output TaskParameter="Sha" PropertyName="GfvSha" />
		  <Output TaskParameter="MajorMinorPatch" PropertyName="GfvMajorMinorPatch" />
		  <Output TaskParameter="SemVer" PropertyName="GfvSemVer" />
		  <Output TaskParameter="LegacySemVer" PropertyName="GfvLegacySemVer" />
		  <Output TaskParameter="LegacySemVerPadded" PropertyName="GfvLegacySemVerPadded" />
		  <Output TaskParameter="FullSemVer" PropertyName="GfvFullSemVer" />
		  <Output TaskParameter="AssemblySemVer" PropertyName="GfvAssemblySemVer" />
		  <Output TaskParameter="NuGetVersion" PropertyName="GfvNuGetVersion" />
		  <Output TaskParameter="NuGetVersion" PropertyName="Version" />
		  <Output TaskParameter="PreReleaseTag" PropertyName="GfvPreReleaseTag" />
		  <Output TaskParameter="PreReleaseTagWithDash" PropertyName="GfvPreReleaseTagWithDash" />
		  <Output TaskParameter="InformationalVersion" PropertyName="GfvInformationalVersion" />
		</GetVersion>
		<Message Text="$(GfvSemVer)" />
		<Message Text="$(GfvNuGetVersion)" />
		<Message Text="$(GfvInformationalVersion)" />
	</Target>

	<Target Name="WriteCommonAssemblyInfo" DependsOnTargets="GetVersion" >
    <WriteCommonAssemblyInfo 
      CompanyName="$(CompanyName)"
      ProductName="$(ProductName)"
      Output="$(BuildDir)\..\CommonAssemblyInfo.cs"
    />
  </Target>

	<Target Name="Build" DependsOnTargets="GetVersion;WriteCommonAssemblyInfo" >
    <MSBuild Projects="$(SourceDir)\$(ProductName).sln" Properties="Configuration=$(Configuration);Platform=$(Platform);BuildDir=$(BuildDir);Version=$(GfvNuGetVersion)" >
      <Output ItemName="Targets" TaskParameter="TargetOutputs" />
    </MSBuild>
    <ItemGroup>
      <ProductTargets Include="@(Targets)" Condition="'%(Extension)' == '.exe'" />
    </ItemGroup>
  </Target>

  <Target Name="Setup" DependsOnTargets="Build;BuildSetup">
  </Target>

  <Target Name="BuildSetup" DependsOnTargets="GetVersion">
	  <PropertyGroup>
		<WixProj>$(SourceDir)\wix\wix.wixproj</WixProj>
	  </PropertyGroup>
	  <MSBuild
		Condition="Exists($(WixProj))" 
		Projects="$(SourceDir)\wix\wix.wixproj" Properties="
		  CompanyName=$(CompanyName);
		  ProductName=$(ProductName);
		  Version=$(GfvMajorMinorPatch);
		  Description=$(GfvSemVer);
		  Configuration=$(Configuration);
		  Platform=$(Platform);
		  OutputPath=$(BuildDir)\setup;
		  BinDir=$(OutDir);
		  SourceDir=$(SourceDir);
		  UpgradeCode=$(UpgradeCode);
		  IntermediateOutputPath=$(BaseIntermediateOutputPath)\setup\
		  ">
		<Output ItemName="MsiFiles" TaskParameter="TargetOutputs"/>
	  </MSBuild>
	  <ItemGroup>
		<Publish Include="@(MsiFiles)" />
	  </ItemGroup>
  </Target>

  <Target Name="ZipProductFiles" DependsOnTargets="Build">
    <ZipProductFiles Targets="@(ProductTargets)" Version="$(Version)" OutputDirectory="$(BuildDir)" >
      <Output ItemName="ZipFiles" TaskParameter="Output" />
    </ZipProductFiles>
    <ItemGroup>
      <Publish Include="@(ZipFiles)" />
    </ItemGroup>
  </Target>

  <Target Name="Tag" DependsOnTargets="GetVersion">
    <PropertyGroup>
      <ReleaseTag>v$(GfvFullSemVer)</ReleaseTag>
    </PropertyGroup>
    <Exec WorkingDirectory="$(SourceDir)" Command="$(Git) tag --force $(ReleaseTag)" />
  </Target>

  <Target Name="Test" DependsOnTargets="Build">
    <ItemGroup>
      <TestTargets Include="%(Targets.Identity)" Condition="$([System.Text.RegularExpressions.Regex]::IsMatch(%(Filename), 'Test'))"/>
    </ItemGroup>
    <Exec Command="&quot;$(NUnitConsole)&quot; --labels=On --result=&quot;$(BuildDir)\TestResult.xml&quot; --labels=All @(TestTargets -> '&quot;%(Identity)&quot;', ' ')" />
  </Target>

  <Target Name="NugetPack" DependsOnTargets="Build">
    <NugetPack OutputDirectory="$(PackageDir)" Targets="@(Targets)" Version="$(GfvNuGetVersion)" >
      <Output ItemName="NugetPackages" TaskParameter="Outputs" />
    </NugetPack>
  </Target>

  <Target Name="NugetPush" DependsOnTargets="NugetPack">
		<Message Text="Pushing $(GfvSemVer)" />
		<Message Text="$(NugetApiKey)" />
    <NugetPush Packages="@(NugetPackages)" Source="$(NugetSource)" ApiKey="$(NugetApiKey)" />
  </Target>

  <Target Name="Install" DependsOnTargets="Setup">
    <Exec Command="&quot;@(MsiFiles, ' ')&quot;" />
  </Target>
  
  <Target Name="PublishOnDropbox" >
    <Copy SourceFiles="@(Publish)"  DestinationFolder="$(USERPROFILE)\Dropbox\$(ProductName)" />
  </Target>
  
  <Target Name="PublishAsGithubRelease" DependsOnTargets="Setup" >
    <Exec IgnoreExitCode="true" IgnoreStandardErrorWarningFormat="true" Command="&quot;$(GithubRelease)&quot; release --tag $(ReleaseTag)" 
      EnvironmentVariables="$(GithubReleaseEnvironmentVariables)"
    />
    <Exec Command="&quot;$(GithubRelease)&quot; upload --tag $(ReleaseTag) --name &quot;%(Publish.Filename).%(Extension)&quot; --replace --file &quot;%(Identity)&quot;" 
      EnvironmentVariables="$(GithubReleaseEnvironmentVariables)"
    />
  </Target>
  
  <Target Name="Clean" >
    <RemoveDir Directories="$(BuildDir)" />
  </Target>

  <Target Name="Publish" DependsOnTargets="Test;Setup;ZipProductFiles;NugetPush;Tag;PublishAsGithubRelease" />

  <Target Name="PublishBeta" DependsOnTargets="Test;Setup;ZipProductFiles;Tag;PublishOnDropbox" />
  
  <Target Name="AllLocal" DependsOnTargets="Test;NugetPack;Setup;ZipProductFiles" />
  
</Project>
